{"remainingRequest":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/src/App.vue","mtime":1563897013551},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/graymbp/Desktop/Inventory/inventoryComponent/inventory/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.form-control {\n    background-color: #F5F5F5;\n    -webkit-appearance: menulist-button;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappingsssCA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\" v-cloak>\n      <v-app>\n        <v-content v-if=\"isLoggedIn == false\">\n          <v-container\n            fill-height>\n            <v-layout\n              align-center>\n                <v-flex\n                  xs1>\n                </v-flex>\n                <v-flex\n                  xs10>\n                  <v-card\n                    height=400>\n                    <v-container\n                      fill-height>\n                      <v-layout\n                        align-center>\n                        <v-flex xs2></v-flex>\n                          <v-flex xs8>\n                            <v-form>\n                                <v-text-field\n                                  v-model=\"login_username\"\n                                  label=\"Email\"\n                                  required\n                                  >\n                                </v-text-field>\n                                <v-text-field\n                                  v-model=\"login_password\"\n                                  label=\"Password\"\n                                  required\n                                  :type=\"show1 ? 'text' : 'password'\"\n                                  @click:append=\"show1 = !show1\"\n                                  :append-icon=\"show1 ? 'visibility' : 'visibility_off'\"\n                                  >\n                                </v-text-field>\n                                <v-layout\n                                  justify-space-between>\n                                  <v-btn\n                                    @click=\"login()\"\n                                    >login\n                                  </v-btn>\n                                  <template>\n                                    <v-layout>\n                                      <v-dialog v-model=\"dialogRegister\" persistent max-width=\"600px\">\n                                        <template v-slot:activator=\"{ on }\">\n                                          <v-btn\n                                            v-on=\"on\"\n                                            >register\n                                          </v-btn>\n                                        </template>\n                                        <v-card>\n                                          <v-card-title>\n                                            <span class=\"headline\">Register</span>\n                                          </v-card-title>\n                                          <v-card-text>\n                                            <v-container grid-list-md>\n                                              <v-layout wrap>\n                                                <v-flex xs12>\n                                                  <v-text-field v-model=\"register_username\" label=\"New Username*\" required></v-text-field>\n                                                </v-flex>\n                                                <v-flex xs12>\n                                                  <v-text-field\n                                                    v-model=\"register_password\"\n                                                    label=\"New Password*\"\n                                                    required\n                                                    :type=\"show2 ? 'text' : 'password'\"\n                                                    @click:append=\"show2 = !show2\"\n                                                    :append-icon=\"show2 ? 'visibility' : 'visibility_off'\"\n                                                    >\n                                                  </v-text-field>\n                                                </v-flex>\n                                              </v-layout>\n                                            </v-container>\n                                          </v-card-text>\n                                          <v-card-actions>\n                                            <v-spacer></v-spacer>\n                                            <v-btn color=\"blue darken-1\" flat @click=\"dialogRegister = false\">Cancel</v-btn>\n                                            <v-btn color=\"blue darken-1\" flat @click=\"register(), dialogRegister = false\">Save</v-btn>\n                                          </v-card-actions>\n                                        </v-card>\n                                      </v-dialog>\n                                    </v-layout>\n                                  </template>\n                                </v-layout>\n                            </v-form>\n                          </v-flex>\n                        <!-- <v-flex xs2></v-flex> -->\n                      </v-layout>\n                      </v-container>\n                    </v-card>\n                </v-flex>\n                <v-flex xs1></v-flex>\n            </v-layout>\n          </v-container>\n        </v-content>\n          <v-content v-else>\n              <v-toolbar>\n                <v-toolbar-title><span class=\"font-weight-thin\">Universal</span> <span>Inventory</span></v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-toolbar-title\n                  class=\"body-2\">\n                  Hello, {{currentUser}}\n                </v-toolbar-title>\n                <v-toolbar-items>\n                  <v-btn flat v-on:click=\"logout()\"> Log Out</v-btn>\n                </v-toolbar-items>\n              </v-toolbar>\n\n              <v-navigation-drawer class=\"blue darken-1\" dark app v-model=\"drawer\">\n                  <v-list>\n                      <v-list-tile>\n                        <v-list-tile-title class=\"title\">\n                          <span class=\"font-weight-thin\">Universal</span> <span>Inventory</span>\n                        </v-list-tile-title>\n                      </v-list-tile>\n                      <v-divider></v-divider>\n\n                      <v-list-tile v-for=\"item in items\" v-on:click=\"page = item.page\">\n                          <v-list-tile-action>\n                            <v-icon>{{ item.icon}}</v-icon>\n                          </v-list-tile-action>\n                          {{item.page}}\n                      </v-list-tile>\n                  </v-list>\n\n              </v-navigation-drawer>\n              <v-container grid-list-lg fluid v-if=\"page == 'dashboard'\">\n                  <h1> Dashboard </h1>\n                  <v-layout row>\n                      <v-flex xs6>\n                          <v-card>\n                              <v-card-title>\n                                  <v-icon size=\"80px\" left color=\"#ff5252\" class=\"mb-10\" z-index=\"1\">\n                                      insert_chart\n                                  </v-icon>\n                                      Total Inventory Items {{inventory.length}}\n                              </v-card-title>\n                          </v-card>\n                      </v-flex>\n                      <v-flex xs6>\n                          <v-card>\n                              <v-card-title>\n                                  <v-icon size=\"80px\" left color=\"#FFEB3B\" class=\"mb-10\" z-index=\"1\">\n                                      monetization_on\n                                  </v-icon>\n                                  Total Sales\n                              </v-card-title>\n                          </v-card>\n                      </v-flex>\n                  </v-layout>\n                  <v-layout row>\n                      <v-flex xs6>\n                          <v-card>\n                              <v-card-title>\n                                  <v-icon size=\"80px\" left color=\"#8E24AA\" class=\"mb-10\" z-index=\"1\">\n                                      local_shipping\n                                  </v-icon>\n                                      Total Orders To Be Shipped\n                              </v-card-title>\n                          </v-card>\n                      </v-flex>\n                      <!-- <v-flex xs6>\n                          <v-card>\n                              <v-card-title>\n                                  <v-icon size=\"80px\" left color=\"#FFEB3B\" class=\"mb-10\" z-index=\"1\">\n                                      monetization_on\n                                  </v-icon>\n                                  Total Sales\n                              </v-card-title>\n                          </v-card>\n                      </v-flex> -->\n                  </v-layout>\n                  <v-layout row>\n\n                      <v-flex xs12>\n\n                              <h1> Calendar <h2>{{todaysdate}}</h2></h1>\n\n                              <v-calendar v-if=\"re_render\" color=\"#00C853\">\n                                  <template v-slot:day=\"{ date }\">\n                                      <template v-for=\"item in eventsMap[date]\">\n                                        <v-menu :key=\"item.title\" v-model=\"item.open\" full-width offset-x>\n                                          <template v-slot:activator=\"{ on }\">\n                                            <div\n                                              v-if=\"!item.time\"\n                                              v-ripple\n                                              class=\"my-event\"\n                                              v-on=\"on\"\n                                              v-html=\"item.title\"\n                                            ></div>\n                                          </template>\n                                          <v-card\n                                            color=\"#00C853\"\n                                            min-width=\"350px\"\n                                            flat\n                                          >\n                                              <v-toolbar color=\"#00C853\" dark>\n                                                  <v-toolbar-title>\n                                                      {{item.title}}\n                                                  </v-toolbar-title>\n                                                  <v-spacer></v-spacer>\n                                              </v-toolbar>\n                                              <v-card>\n                                                  <v-card-title primary-title dark>\n                                                      {{item.marketplace}} - {{item.category}}\n                                                  </v-card-title>\n                                                  <v-card-actions>\n                                                      <v-btn flat>\n                                                              Cancel\n                                                      </v-btn>\n                                                      </v-card-actions>\n                                                  </v-card>\n                                              </v-card>\n                                          </v-menu>\n                                      </template>\n                                  </template>\n                              </v-calendar>\n                      </v-flex>\n                  </v-layout>\n              </v-container>\n\n              <!-- Inventory Page -->\n                <v-container grid-list-lg fluid v-if=\"page == 'inventory'\">\n                  <h1> Inventory</h1>\n                  <v-layout grid-list-lg wrap>\n                    <v-flex xs4>\n                      <v-select\n                        label=\"Marketplace\"\n                        :items=\"marketplaces\"\n                        v-model=\"marketplaceType\"\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs4>\n                      <v-select\n                        label=\"Category\"\n                        :items=\"categories\"\n                        v-model=\"categoryType\"\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs4>\n                      <v-text-field\n                        v-model=\"search\"\n                        append-icon=\"search\"\n                        label=\"Search\"\n                        single-line\n                        hide-details\n                      ></v-text-field>\n                    </v-flex>\n                  </v-layout>\n\n                  <!--new item button -->\n                      <div>\n                          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n                          <template v-slot:activator=\"{ on }\">\n                              <v-layout justify-start row>\n                                  <v-flex xs2>\n                                      <v-btn color=\"blue darken-1\" dark class=\"mb-2 \" v-on=\"on\">New Item</v-btn>\n                                  </v-flex>\n                              </v-layout>\n                          </template>\n                          <v-card>\n                            <v-card-title>\n                                <h1> New Item </h1>\n                            </v-card-title>\n\n\n                            <v-card-text>\n                              <v-container grid-list-md>\n                                <v-layout wrap>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-select\n                                      v-model=\"newMarketplace\"\n                                      label=\"MarketPlace\"\n                                      :items=\"marketplaces\"\n                                      >\n                                    </v-select>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newImage\" label=\"Image URL\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newTitle\" label=\"Title\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-select\n                                      v-model=\"newCategory\"\n                                      label=\"Category\"\n                                      :items=\"categories\"\n                                      >\n                                    </v-select>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newQuantity\" label=\"Qty\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newCost\" label=\"Cost\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newSku\" label=\"SKU\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                    <v-text-field v-model=\"newLocation\" label=\"Location\"></v-text-field>\n                                  </v-flex>\n                                  <v-flex xs12 sm6 md4>\n                                      <v-menu\n                                        ref=\"menu\"\n                                        v-model=\"menu\"\n                                        :close-on-content-click=\"false\"\n                                        :nudge-right=\"40\"\n                                        :return-value.sync=\"date\"\n                                        lazy\n                                        transition=\"scale-transition\"\n                                        offset-y\n                                        full-width\n                                        min-width=\"290px\"\n                                      >\n                                        <template v-slot:activator=\"{ on }\">\n                                          <v-text-field\n                                            v-model=\"date\"\n                                            label=\"Start Date\"\n                                            prepend-icon=\"event\"\n                                            readonly\n                                            v-on=\"on\"\n                                          ></v-text-field>\n                                        </template>\n                                        <v-date-picker v-model=\"date\" no-title scrollable>\n                                          <v-spacer></v-spacer>\n                                          <v-text-field v-model=\"newTitle\" label=\"Title\"></v-text-field>\n                                          <v-spacer></v-spacer>\n                                          <v-btn flat color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                                          <v-btn flat color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n                                        </v-date-picker>\n                                      </v-menu>\n                                  </v-flex>\n                                </v-layout>\n                              </v-container>\n                            </v-card-text>\n\n                            <v-card-actions>\n                              <v-spacer></v-spacer>\n                              <v-btn color=\"blue darken-1\" flat @click=\"cancelnewitem()\">Cancel</v-btn>\n                              <v-btn color=\"blue darken-1\" flat @click=\"addItem()\">Save</v-btn>\n                            </v-card-actions>\n                          </v-card>\n                        </v-dialog>\n                    </div>\n\n                <!-- CSV Upload -->\n\n                    <div>\n                        <v-dialog v-model=\"csvDialog\" max-width=\"500px\">\n                            <template v-slot:activator=\"{ on }\">\n                                <v-btn color=\"blue darken-1\" dark class=\"mb-2 \" v-on=\"on\">CSV Upload</v-btn>\n                            </template>\n                            <v-card>\n                                <v-card-title>\n                                    <h1>CSV Upload</h1>\n                                </v-card-title>\n                                <v-card-text>\n                                    <vue-csv-import v-model=\"csv\" :map-fields=\"['marketplace', 'image', 'title', 'category', 'qty', 'sku', 'location', 'cost']\"></vue-csv-import>\n                                </v-card-text>\n                                <v-card-actions>\n                                  <v-spacer></v-spacer>\n                                  <v-btn color=\"blue darken-1\" flat @click=\"cancelCsvUpload()\">Cancel</v-btn>\n                                  <v-btn color=\"blue darken-1\" flat @click=\"sendData()\">Upload</v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-dialog>\n                    </div>\n\n                <!-- Inventory List -->\n                  <v-data-table\n                    :headers=\"headers\"\n                    :items=\"filteredItem\"\n                    :search=\"search\"\n                    class=\"elevation-1\"\n                  >\n                   <template v-slot:items=\"props\">\n                     <td v-if=\"!editing[props.index].show\">{{ props.item.marketplace }}</td>\n                     <td v-else >\n                        <v-select\n                          v-model=\"props.item.marketplace\"\n                          :items=\"marketplaces\"\n                          >\n                        </v-select>\n                     </td>\n                       <td v-if=\"!editing[props.index].show\">\n                          <v-img width=\"100%\" v-bind:src=\"props.item.image\"></v-img>\n                        </td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.image\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.title }}</td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.title\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.category }}</td>\n                       <td v-else >\n                         <v-select\n                           v-model=\"props.item.category\"\n                           :items=\"categories\"\n                           >\n                         </v-select>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.quantity }}</td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.quantity\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.sku }}</td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.sku\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.location }}</td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.location\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td v-if=\"!editing[props.index].show\">{{ props.item.cost }}</td>\n                       <td v-else >\n                         <v-text-field\n                             v-model=\"props.item.cost\"\n                             label=\"Edit\"\n                             single-line\n                             height=\"20\"\n                             mb-0\n                             class=\"!text-field_details\"\n                            ></v-text-field>\n                       </td>\n                       <td\n                          class=\"layout\"\n                          v-if=\"!editing[props.index].show\">\n                                <v-icon class=\"mr-2 align-center pt-4\" small  @click=\"updateList(props.index)\"> edit </v-icon>\n                                <v-icon class=\"mr-2 align-center pt-4\" small @click=\"deleteItem(props.item)\"> delete </v-icon>\n                      </td>\n                      <td\n                        class=\"layout\"\n                        v-else >\n                          <v-btn class=\"white--text\" color=\"red\" @click=\"updateList(props.index)\">cancel</v-btn>\n                          <v-btn class=\"white--text\" color=\"blue darken-1\" @click=\"updateInventory(props.item, props.index)\">save</v-btn>\n                      </td>\n                    </template>\n                    <template v-slot:no-results>\n                      <v-alert :value=\"true\" color=\"error\" icon=\"warning\">\n                        Your search for \"{{ search }}\" found no results.\n                      </v-alert>\n                    </template>\n                  </v-data-table>\n                </v-container>\n\n              <!-- Orders Page -->\n              <v-container grid-list-lg fluid v-if=\"page == 'orders'\">\n                  <h1> Orders</h1>\n                  <v-layout grid-list-lg wrap>\n                      <v-flex xs4>\n                          <v-select\n                            label=\"Marketplace\"\n                            :items=\"marketplaces\"\n                            v-model=\"marketplaceType\"\n                          ></v-select>\n                      </v-flex>\n                      <v-flex xs4>\n                          <v-select\n                            label=\"Category\"\n                            :items=\"categories\"\n                            v-model=\"categoryType\"\n                          ></v-select>\n                      </v-flex>\n                      <v-flex xs4>\n                          <v-text-field\n                            v-model=\"search\"\n                            append-icon=\"search\"\n                            label=\"Search\"\n                            single-line\n                            hide-details\n                          ></v-text-field>\n                      </v-flex>\n              </v-layout>\n\n                  <template>\n                  <div>\n                      <v-dialog v-model=\"dialogOrder\" max-width=\"500px\">\n                      <template v-slot:activator=\"{ on }\">\n                          <v-layout justify-start row>\n                              <v-flex xs2>\n                                  <v-btn color=\"blue darken-1\" dark class=\"mb-2\" v-on=\"on\">New Order</v-btn>\n                              </v-flex>\n                          </v-layout>\n                      </template>\n                      <v-card>\n                        <v-card-title>\n                            <h1> New Order </h1>\n                        </v-card-title>\n\n\n                        <v-card-text>\n                          <v-container grid-list-md>\n                            <v-layout wrap>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderCustomer\" label=\"Customer\"></v-text-field>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderSku\" label=\"Sku\"></v-text-field>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderTitle\" label=\"Title\"></v-text-field>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-select v-model=\"newOrderCategory\" label=\"Category\"\n                                :items=\"categories\">\n                            </v-select>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderQuantity\" label=\"Qty\"></v-text-field>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderPrice\" label=\"Price\"></v-text-field>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-select v-model=\"newOrderMarketplace\" label=\"Marketplace\"\n                                :items=\"marketplaces\"></v-select>\n                              </v-flex>\n                              <v-flex xs12 sm6 md4>\n                                <v-text-field v-model=\"newOrderLocation\" label=\"Location\"></v-text-field>\n                              </v-flex>\n                            </v-layout>\n                          </v-container>\n                        </v-card-text>\n\n                        <v-card-actions>\n                          <v-spacer></v-spacer>\n                          <v-btn color=\"blue darken-1\" flat @click=\"cancelNewOrder()\">Cancel</v-btn>\n                          <v-btn color=\"blue darken-1\" flat @click=\"addOrder()\">Save</v-btn>\n                        </v-card-actions>\n                      </v-card>\n                    </v-dialog>\n                </div>\n                </template>\n\n                <v-data-table\n                  :headers=\"Orderheaders\"\n                  :items=\"order\"\n                  class=\"elevation-1\"\n                > <!--change to filtered items-->\n                <template v-slot:items=\"props\">\n                  <td v-if=\"!order_editing[props.index].show\">{{ props.item.customer }}</td>\n                  <td v-else >\n                    <v-text-field\n                        v-model=\"props.item.customer\"\n                        label=\"Edit\"\n                        single-line\n                        height=\"20\"\n                        mb-0\n                        class=\"!text-field_details\"\n                       ></v-text-field>\n                  </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.sku}}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.sku\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.title }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.title\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.category }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.category\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.quantity }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.quantity\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.marketplace }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.marketplace\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.location }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.location\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td v-if=\"!order_editing[props.index].show\">{{ props.item.price }}</td>\n                    <td v-else >\n                      <v-text-field\n                          v-model=\"props.item.price\"\n                          label=\"Edit\"\n                          single-line\n                          height=\"20\"\n                          mb-0\n                          class=\"!text-field_details\"\n                         ></v-text-field>\n                    </td>\n                    <td\n                       class=\"layout\"\n                       v-if=\"!order_editing[props.index].show\">\n                             <v-icon class=\"mr-2 align-center pt-4\" small  @click=\"updateOrderList(props.index)\"> edit </v-icon>\n                             <v-icon class=\"mr-2 align-center pt-4\" small @click=\"deleteOrder(props.item)\"> delete </v-icon>\n                   </td>\n                   <td\n                     class=\"layout\"\n                     v-else >\n                       <v-btn class=\"white--text\" color=\"red\" @click=\"updateOrderList(props.index)\">cancel</v-btn>\n                       <v-btn class=\"white--text\" color=\"blue darken-1\" @click=\"updateOrder(props.item, props.index)\">save</v-btn>\n                   </td>\n                 </template>\n                 <template v-slot:no-results>\n                   <v-alert :value=\"true\" color=\"error\" icon=\"warning\">\n                     Your search for \"{{ search }}\" found no results.\n                   </v-alert>\n                 </template>\n                </v-data-table>\n                  </v-container>\n                          <v-container grid-list-lg fluid v-if=\"page == 'admin'\">\n                              <h1> Admin</h1>\n                          </v-container>\n                      </v-content>\n                  </v-app>\n              </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld';\nimport {VueCsvImport} from 'vue-csv-import';\nconst url = \"https://codeschool-inventory-project.herokuapp.com\";\n\nexport default {\n  name: 'App',\n  components: {\n    // HelloWorld,\n    VueCsvImport\n  },\n  data () {\n    return {\n        csv: null,\n        todaysdate: new Date(),\n        detail: \"\",\n        calTitle: \"\",\n        page: \"dashboard\",\n        drawer: true,\n        date: new Date().toISOString().substr(0, 10),\n        menu: false,\n        dialog: false,\n        dialogRegister: false,\n        dialogOrder: false,\n        csvDialog: false,\n        editing: [],\n        order_editing: [],\n        currentUser: \"\",\n        login_username: \"\",\n        login_password: \"\",\n        register_username: \"\",\n        register_password: \"\",\n        isLoggedIn: false,\n        show1: false,\n        show2: false,\n        search: '',\n        max25chars: v => v.length <= 25 || 'Input too long!',\n        items: [\n            { title: 'DashBoard', icon: 'dashboard', page: 'dashboard'},\n            { title: 'Inventory', icon: 'shopping_cart', page: 'inventory' },\n            { title: 'Orders', icon: 'store', page: 'orders' },\n            { title: 'Admin', icon: 'person', page: 'admin' }\n\n          ],\n          headers: [\n          {\n            text: 'MarketPlace',\n            align: 'left',\n            sortable: false,\n            value: 'marketplace'\n          },\n          { text: 'Image', value: 'Image' },\n          { text: 'Title', value: 'title' },\n          { text: 'Category', value: 'category' },\n          { text: 'qty', value: 'quantity' },\n          { text: 'sku', value: 'sku' },\n          { text: 'Location', value: 'location' },\n          { text: 'Cost', value: 'cost' },\n          { text: 'Actions', value: 'name', sortable: false }\n        ],\n        Orderheaders: [\n        {\n          text: 'Customer',\n          align: 'left',\n          sortable: false,\n          value: 'name'\n        },\n        { text: 'Sku', value: 'SKU' },\n        { text: 'Title', value: 'Title' },\n        { text: 'Category', value: 'Category' },\n        { text: 'qty', value: 'Qty' },\n        { text: 'MarketPlace', value: 'MarketPlace' },\n        { text: 'Location', value: 'Location' },\n        { text: 'Price', value: 'Price' },\n        { text: 'Actions', value: 'name', sortable: false }\n      ],\n        events: [\n            {\n              title: 'Vacation',\n              details: 'Going to the beach!',\n              date: '2019-07-12',\n              open: false\n            },\n            {\n              title: 'Vacation',\n              details: 'Going to the beach!',\n              date: '2019-07-11',\n              open: false\n            },\n            {\n              title: 'Vacation',\n              details: 'Going to the beach!',\n              date: '2019-07-15',\n              open: false\n            },\n        ],\n        filteredItems: [],\n        filteredOrders: [],\n        marketplaces: [],\n        marketplaceType: \"all\",\n        categories: [\"all\", \"shoe\", \"cooking\", \"books\", \"sports\", \"entertainment\"],\n        categoryType: \"all\",\n\n        inventory: [],\n          newSku: \"\",\n          newImage: \"\",\n          newTitle: \"\",\n          newCategory: \"\",\n          newMarketplace: \"\",\n          newQuantity: \"\",\n          newCost: \"\",\n          newLocation: \"\",\n          order: [],\n          newOrderCustomer: \"\",\n          newOrderSku: \"\",\n          newOrderTitle: \"\",\n          newOrderCategory: \"\",\n          newOrderMarketplace: \"\",\n          newOrderQuantity: \"\",\n          newOrderPrice: \"\",\n          newOrderLocation: \"\",\n\n          re_render: true,\n        }\n    },\n    created: function() {\n        this.getInventory();\n        this.getOrder();\n    },\n    methods: {\n        sendData: function() {\n            var app = this;\n            console.log(this.csv);\n            for (var item in this.csv) {\n                var req_body = {\n                    sku: this.csv[item].sku,\n                    image: this.csv[item].image,\n                    title: this.csv[item].title,\n                    category: this.csv[item].category,\n                    marketplace: this.csv[item].marketplace,\n                    quantity: this.csv[item].qty,\n                    cost: this.csv[item].cost,\n                    location: this.csv[item].location,\n                    date: new Date().toISOString().substr(0, 10)\n                };\n                console.log(req_body);\n                fetch(`${url}/inventory`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify(req_body)\n                }).then(function(response) {\n                    console.log(response);\n                });\n            }\n        },\n        newevent: function(){\n            var app = this;\n            var new_event = {\n                title: this.calTitle,\n                details: this.detail,\n                date: this.date,\n                open: false,\n            };\n            this.events.push(new_event);\n        },\n\n        login: function() {\n            var app = this;\n            fetch(`${url}/users/login`, {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username: this.login_username,\n                    password: this.login_password\n                })\n            }).then(function(response) {\n                if (response.status == 200) {\n                    response.json().then(function(data) {\n                        app.isLoggedIn = true;\n                        app.getInventory();\n                        app.getOrder();\n                    });\n                }\n                else if (response.status == 403) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    })\n                }\n            });\n        },\n        logout: function() {\n            var app = this;\n            fetch(`${url}/logout`, {\n              credentials: \"include\"\n          }).then(function(response) {\n                if(response.status == 200 ) {\n                  console.log(response.status)\n                    app.isLoggedIn = false;\n                    console.log(app.isLoggedIn);\n                    // app.getInventory();\n                } else {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    });\n                }\n            });\n        },\n        register: function() {\n            var app = this;\n            fetch(`${url}/users/register`, {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username: this.register_username,\n                    password: this.register_password\n                })\n            }).then(function(response) {\n                if (response.status == 422 || response.status == 400) {\n\t\t\t\t\tresponse.json().then(function(data) {\n\t\t\t\t\t\talert(data.msg);\n                        app.isLoggedIn = true;\n\t\t\t\t\t})\n\t\t\t\t} else if (response.status == 201) {\n\t\t\t\t\tconsole.log(\"It worked\");\n                    app.isLoggedIn = false;\n                    app.getInventory();\n                    app.getOrder();\n\t\t\t\t}\n            });\n        },\n\n        updateOrderList: function(index) {\n            var app = this;\n            var new_editing = this.order_editing;\n            new_editing[index].show = !new_editing[index].show;\n            this.order_editing = new_editing;\n            console.log(this.order_editing);\n        },\n\n        updateList: function(index) {\n            var app = this;\n            var new_editing = this.editing;\n            new_editing[index].show = !new_editing[index].show;\n            this.editing = new_editing;\n            this.getInventory();\n            // console.log(this.editing);\n        },\n\n        cancelnewitem: function(){\n            this.dialog = false;\n        },\n        cancelNewOrder: function(){\n            this.dialogOrder = false;\n        },\n        cancelCsvUpload: function(){\n            this.csvDialog = false;\n        },\n        getInventory: function() {\n            var app = this;\n            console.log(\"Getting Inventory\");\n            fetch(`${url}/inventory`, {\n              credentials: \"include\",\n            }).then(function(response) {\n              if (response.status == 403) {\n                this.isLoggedIn = false\n              } else {\n                response.json().then(function(data) {\n                    console.log(data);\n                    app.isLoggedIn = true;\n                    app.inventory = data.inventory;\n                    app.currentUser = data.user_name;\n                    app.marketplaceList;\n                    app.inventory.forEach(function(product) {\n                      app.editing.push({show: false});\n                    });\n                });\n              }\n            });\n        },\n        addItem: function() {\n            var app = this;\n            console.log(\"Adding Item\");\n            var req_body = {\n                sku: this.newSku,\n                image: this.newImage,\n                title: this.newTitle,\n                category: this.newCategory,\n                marketplace: this.newMarketplace,\n                quantity: this.newQuantity,\n                cost: this.newCost,\n                location: this.newLocation,\n                date: this.date,\n            };\n            fetch(`${url}/inventory`, {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(req_body)\n            }).then(function(response) {\n                if(response.status == 400) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    })\n                } else if (response.status == 201) {\n                    app.newSku = \"\";\n                    app.newImage = \"\";\n                    app.newTitle = \"\";\n                    app.newCategory = \"\";\n                    app.newMarketplace = \"\";\n                    app.newQuantity = \"\";\n                    app.newCost = \"\";\n                    app.newLocation = \"\";\n                    app.dialog= false;\n                    app.newevent();\n                    app.getInventory();\n                }\n            });\n        },\n        deleteItem: function(item) {\n            var app = this;\n            console.log(\"Deleting item\");\n            confirm(\"Are you sure you want to delete this item?\");\n            fetch(`${url}/inventory/${item._id}`, {\n                method: \"DELETE\",\n                credentials: \"include\",\n            }).then(function(response) {\n                if(response.json == 404) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    });\n                } else if(response.status == 204) {\n                    app.getInventory();\n                }\n            });\n        },\n        updateInventory: function(item, index) {\n            var app = this;\n            console.log(\"Updating item\");\n            var req_body = {\n                sku: item.sku,\n                image: item.image,\n                title: item.title,\n                category: item.category,\n                marketplace: item.marketplace,\n                quantity: item.quantity,\n                cost: item.cost,\n                location: item.location\n            };\n            fetch(`${url}/inventory/${item._id}`, {\n                method: \"PUT\",\n                credentials: \"include\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(req_body)\n            }).then(function(response) {\n                if(response.status == 400 || response.status == 404) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    });\n                } else if(response.status == 200) {\n                  console.log(app.editing)\n                    item.editing = false;\n                    app.getInventory();\n                    app.editing[index].show = !app.editing[index].show;\n                }\n            });\n        },\n        getOrder: function() {\n            var app = this;\n            console.log(\"Getting Order\");\n            fetch(`${url}/order`, {\n              credentials: \"include\",\n            }).then(function(response) {\n              if (response.status == 403) {\n                this.isLoggedIn = false\n              } else {\n                response.json().then(function(data) {\n                    console.log(data);\n                    app.isLoggedIn = true;\n                    app.order = data.order;\n                    app.marketplaceList;\n                    app.order.forEach(function(order) {\n                     app.order_editing.push({show: false});\n                    });\n                });\n              }\n            });\n        },\n        addOrder: function() {\n            var app = this;\n            console.log(\"Adding Order\");\n            var req_body = {\n                customer: this.newOrderCustomer,\n                sku: this.newOrderSku,\n                title: this.newOrderTitle,\n                category: this.newOrderCategory,\n                marketplace: this.newOrderMarketplace,\n                quantity: this.newOrderQuantity,\n                price: this.newOrderPrice,\n                location: this.newOrderLocation\n            };\n            fetch(`${url}/order`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(req_body)\n            }).then(function(response) {\n                if(response.status == 400) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    })\n                } else if (response.status == 201) {\n                    app.newOrderCustomer = \"\";\n                    app.newOrderSku = \"\";\n                    app.newOrderTitle = \"\";\n                    app.newOrderCategory = \"\";\n                    app.newOrderMarketplace = \"\";\n                    app.newOrderQuantity = \"\";\n                    app.newOrderPrice = \"\";\n                    app.newOrderLocation = \"\";\n                    app.dialogOrder= false;\n                    app.getOrder();\n                }\n            });\n        },\n        deleteOrder: function(order) {\n            var app = this;\n            console.log(\"Deleting order\");\n            confirm(\"Are you sure you want to delete this order?\");\n            fetch(`${url}/order/${order._id}`, {\n                method: \"DELETE\"\n            }).then(function(response) {\n                if(response.json == 404) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    });\n                } else if(response.status == 204) {\n                    app.getOrder();\n                }\n            });\n        },\n        updateOrder: function(order, index) {\n            var app = this;\n            console.log(\"Updating order\");\n            var req_body = {\n                customer: order.customer,\n                sku: order.sku,\n                title: order.title,\n                category: order.category,\n                marketplace: order.marketplace,\n                quantity: order.quantity,\n                price: order.price,\n                location: order.location\n            };\n            fetch(`${url}/order/${order._id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(req_body)\n            }).then(function(response) {\n                if(response.status == 400 || response.status == 404) {\n                    response.json().then(function(data) {\n                        alert(data.msg);\n                    });\n                } else if(response.status == 200) {\n                  console.log(app.order_editing)\n                    order.order_editing = false;\n                    app.getOrder();\n                    app.order_editing[index].show = !app.order_editing[index].show;\n                }\n            });\n        },\n    },\n    computed: {\n        eventsMap() {\n            const map = {}\n            this.inventory.forEach(e => (map[e.date] = map[e.date] || []).push(e))\n            return map\n        },\n        marketplaceList: function() {\n            this.marketplaces = [\"all\"];\n            this.inventory.forEach((item) => {\n                if (!this.marketplaces.includes(item.marketplace)) {\n                    this.marketplaces.push(item.marketplace);\n                }\n            })\n        },\n        filteredItem: function() {\n            return this.filteredCategory.filter((i) => {\n                return this.filteredMarketplace.includes(i);\n            })\n        },\n        filteredMarketplace: function() {\n            return this.inventory.filter((i) => {\n                return this.marketplaceType == \"all\" || (i.marketplace == this.marketplaceType);\n            })\n        },\n        filteredCategory: function() {\n            return this.inventory.filter((i) => {\n                return this.categoryType == \"all\" || (i.category == this.categoryType);\n            })\n        },\n        filteredOrders: function() {\n            return this.filteredCategory.filter((i) => {\n                return this.filteredMarketplace.includes(i);\n            })\n        },\n\n    }\n}\n</script>\n\n<style>\n.form-control {\n    background-color: #F5F5F5;\n    -webkit-appearance: menulist-button;\n}\n</style>\n"]}]}